import 'dart:io';

import 'package:http/io_client.dart';
import 'package:proxies/src/proxy_provider.dart';

/// An object that holds proxy information, and can generate an [IOClient].
///
/// Usually generated by a [ProxyProvider].
class Proxy {
  final String host;
  final int port;
  final String username;
  final String password;

  const Proxy({
    this.host,
    this.port,
    this.username,
    this.password,
  });

  /// Creates a proxy configuration string.
  /// Can be used with [HttpClient.findProxy].
  String get configuration {
    assert(host != null && port != null);
    assert(!(host.contains('@') || host.contains(':')));

    String authPrefix;
    if (username != null) {
      authPrefix = username;
      if (password != null) authPrefix += ':' + password;
      authPrefix += '@';
    }

    return 'PROXY ${authPrefix ?? ''}$host:$port';
  }

  /// Generates an [IOClient] from the [Proxy] object.
  /// An existing [HttpClient] can be provided; one will be generated otherwise.
  IOClient createIOClient([HttpClient existingHttpClient]) {
    final findProxyString = configuration;
    final httpClient = (existingHttpClient ?? HttpClient())
      ..findProxy = (uri) => findProxyString;
    return IOClient(httpClient);
  }
}
